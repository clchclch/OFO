<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bootdo.ofo.dao.HbOrderMapper" >
  <resultMap id="BaseResultMap" type="com.bootdo.ofo.domain.HbOrder" >
    <id column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="order_userid" property="orderUserid" jdbcType="VARCHAR" />
    <result column="order_price" property="orderPrice" jdbcType="DOUBLE" />
    <result column="order_createtime" property="orderCreatetime" jdbcType="TIMESTAMP" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_id, order_userid, order_price, order_createtime, order_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bootdo.ofo.domain.HbOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hb_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from hb_order
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from hb_order
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.bootdo.ofo.domain.HbOrderExample" >
    delete from hb_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bootdo.ofo.domain.HbOrder" >
    insert into hb_order (order_id, order_userid, order_price, 
      order_createtime, order_type)
    values (#{orderId,jdbcType=VARCHAR}, #{orderUserid,jdbcType=VARCHAR}, #{orderPrice,jdbcType=DOUBLE}, 
      #{orderCreatetime,jdbcType=TIMESTAMP}, #{orderType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bootdo.ofo.domain.HbOrder" >
    insert into hb_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderUserid != null" >
        order_userid,
      </if>
      <if test="orderPrice != null" >
        order_price,
      </if>
      <if test="orderCreatetime != null" >
        order_createtime,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderUserid != null" >
        #{orderUserid,jdbcType=VARCHAR},
      </if>
      <if test="orderPrice != null" >
        #{orderPrice,jdbcType=DOUBLE},
      </if>
      <if test="orderCreatetime != null" >
        #{orderCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bootdo.ofo.domain.HbOrderExample" resultType="java.lang.Integer" >
    select count(*) from hb_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update hb_order
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderUserid != null" >
        order_userid = #{record.orderUserid,jdbcType=VARCHAR},
      </if>
      <if test="record.orderPrice != null" >
        order_price = #{record.orderPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.orderCreatetime != null" >
        order_createtime = #{record.orderCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderType != null" >
        order_type = #{record.orderType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update hb_order
    set order_id = #{record.orderId,jdbcType=VARCHAR},
      order_userid = #{record.orderUserid,jdbcType=VARCHAR},
      order_price = #{record.orderPrice,jdbcType=DOUBLE},
      order_createtime = #{record.orderCreatetime,jdbcType=TIMESTAMP},
      order_type = #{record.orderType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bootdo.ofo.domain.HbOrder" >
    update hb_order
    <set >
      <if test="orderUserid != null" >
        order_userid = #{orderUserid,jdbcType=VARCHAR},
      </if>
      <if test="orderPrice != null" >
        order_price = #{orderPrice,jdbcType=DOUBLE},
      </if>
      <if test="orderCreatetime != null" >
        order_createtime = #{orderCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bootdo.ofo.domain.HbOrder" >
    update hb_order
    set order_userid = #{orderUserid,jdbcType=VARCHAR},
      order_price = #{orderPrice,jdbcType=DOUBLE},
      order_createtime = #{orderCreatetime,jdbcType=TIMESTAMP},
      order_type = #{orderType,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  
  <select id="list" resultType="map">
		select `order_id`,`order_userid`,`user_name`,`order_price`,`order_createtime`,`order_type` from hb_order,hb_user where order_userid = user_id
  		  <if test="orderId != null and orderId != ''"> and order_id = #{orderId} </if>
  		  <if test="orderUserid != null and orderUserid != ''"> and order_userid = #{orderUserid} </if>
  		  <if test="userName != null and userName != ''"> and user_name = #{userName} </if>
  		  <if test="orderPrice != null and orderPrice != ''"> and order_price = #{orderPrice} </if>
  		  <if test="orderCreatetime != null and orderCreatetime != ''"> and order_createtime = #{orderCreatetime} </if>
  		  <if test="orderType != null and orderType != ''"> and order_type = #{orderType} </if>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from hb_order
		 <where>  
  		  <if test="orderId != null and orderId != ''"> and order_id = #{order_id} </if>
  		  <if test="orderUserid != null and orderUserid != ''"> and order_userid = #{order_userid} </if>
  		  <if test="orderPrice != null and orderPrice != ''"> and order_price = #{order_price} </if>
  		  <if test="orderCreatetime != null and orderCreatetime != ''"> and order_createtime = #{order_createtime} </if>
  		  <if test="orderType != null and orderType != ''"> and order_type = #{order_type} </if>
  		</where>
	</select>
	 
	<delete id="remove">
		delete from hb_order where order_id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from hb_order where order_id in 
		<foreach item="order_id" collection="array" open="(" separator="," close=")">
			#{order_id}
		</foreach>
	</delete>
  
</mapper>